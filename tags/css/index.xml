<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> </title>
    <link>http://blog.michaelhamrah.com/tags/css/</link>
    <language>en-us</language>
    <author>Michael Hamrah</author>
    <rights>(C) 2015</rights>
    <updated>2011-03-02 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Quicktip: Use Negative Margins with CSS Transforms to Fix Clipping</title>
          <link>http://blog.michaelhamrah.com/2011/03/quicktip-use-negative-margins-with-css-transforms-to-fix-clipping/</link>
          <pubDate>Wed, 02 Mar 2011 00:00:00 UTC</pubDate>
          <author>Michael Hamrah</author>
          <guid>http://blog.michaelhamrah.com/2011/03/quicktip-use-negative-margins-with-css-transforms-to-fix-clipping/</guid>
          <description>&lt;p&gt;I&amp;#8217;ve been playing around with CSS Transforms and had an annoying issue: when rotating divs at an angle, the edge of the div also rotated leaving a gap where I didn&amp;#8217;t want one. See the pic:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://i2.wp.com/www.michaelhamrah.com/blog/wp-content/uploads/2011/03/rotated-div.png&#34;&gt;&lt;img src=&#34;http://i2.wp.com/www.michaelhamrah.com/blog/wp-content/uploads/2011/03/rotated-div.png?resize=246%2C117&#34; alt=&#34;&#34; title=&#34;rotated div2&#34; class=&#34;aligncenter size-full wp-image-531&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this case, the div is actually a header tag I wanted to span the length of the page, like a ribbon stretching the width of browser. But I did not want that gap. So what to do? I thought about using Transforms to skew the header the angle required to maintain a vertical line, but that&amp;#8217;s annoying.&lt;/p&gt;

&lt;p&gt;Instead, I simply added a negative margin to the width to stretch the header enough to hide the gap. Here&amp;#8217;s the css and final result:&lt;/p&gt;

&lt;pre class=&#34;syntax css&#34;&gt;header 
{
  background-color: #191919;
  margin: 75px -20px;
  -webkit-transform: rotate(-10deg);
  -moz-transform: rotate(-10deg);
  tranform:rotate(-10deg);
}
&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://i0.wp.com/www.michaelhamrah.com/blog/wp-content/uploads/2011/03/rotated-div2.png&#34;&gt;&lt;img src=&#34;http://i0.wp.com/www.michaelhamrah.com/blog/wp-content/uploads/2011/03/rotated-div2.png?resize=246%2C117&#34; alt=&#34;&#34; title=&#34;rotated div2&#34; class=&#34;aligncenter size-full wp-image-531&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may find rotate and skew is a better combination to achieve the desired result- however, if you have text in your containing element, that text will also be skewed if you use skew.&lt;/p&gt;

&lt;p&gt;To achieve the desired result within a page (where you don&amp;#8217;t have the benefit of viewport clipping) you can always put the rotated element within another element, use negative margins, and set &lt;code class=&#34;syntax css&#34;&gt;overflow:hidden&lt;/code&gt; to achieve the desired result.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Wiping Out Inherited CSS Styles</title>
          <link>http://blog.michaelhamrah.com/2009/02/wiping-out-inherited-css-styles/</link>
          <pubDate>Fri, 27 Feb 2009 00:00:00 UTC</pubDate>
          <author>Michael Hamrah</author>
          <guid>http://blog.michaelhamrah.com/2009/02/wiping-out-inherited-css-styles/</guid>
          <description>&lt;p&gt;Sure, you can use the !important css keyword in your stylesheets to override inherited styles, but what about when you want to simply wipe out or remove a style defined in a parent? Use the auto keyword.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s say you have a style defined in a global.css sheet defining a position for a class called menu:&lt;/p&gt;

&lt;pre class=&#34;brush: css; title: ; notranslate&#34; title=&#34;&#34;&gt;ul.menu {
position:absolute;
left: 10px;
top: 10px;
}
&lt;/pre&gt;

&lt;p&gt;This will position a &lt;ul class=&amp;#8221;menu&amp;#8221;&gt; element&lt;/ul&gt; 10 pixels away from the top left corner of the parent element.  But what if you want to move that menu to the right side of the parent element, but you can&amp;#8217;t change the defined style in global.css?&lt;/p&gt;

&lt;p&gt;You create a new stylesheet or define an inline style, and override the ul.menu class by specifying&lt;/p&gt;

&lt;pre class=&#34;brush: css; title: ; notranslate&#34; title=&#34;&#34;&gt;ul.menu {
right:10px;
}
&lt;/pre&gt;

&lt;p&gt;But this simply stretches the menu to the other corner.   We need to override the left:10px; style with the default style (as if we never specified the left:10px; to begin with).  left:none; won&amp;#8217;t work and left:0; won&amp;#8217;t either.  The solution is the auto keyword:&lt;/p&gt;

&lt;pre class=&#34;brush: css; title: ; notranslate&#34; title=&#34;&#34;&gt;ul.menu {
right:10px;
left:auto; /* removes left:10px from parent */
}
&lt;/pre&gt;

&lt;p&gt;Voila, you&amp;#8217;re done!  It&amp;#8217;s as if the left:10px was never defined!&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
